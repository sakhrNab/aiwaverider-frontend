import{r as d,A as X,j as e,am as B,an as Z,ao as O,y as u,ap as A,aq as ee,ar as te}from"./index-CDuOHj3I.js";import{I as ae}from"./categories-DXhb4QT0.js";const se="_profilePage_7nqzd_3",ne="_profileHeader_7nqzd_23",oe="_coverImage_7nqzd_29",re="_avatarContainer_7nqzd_45",ie="_avatar_7nqzd_45",ce="_avatarOverlay_7nqzd_79",le="_hasImage_7nqzd_98",de="_modal_7nqzd_108",me="_modalContent_7nqzd_121",ue="_modalClose_7nqzd_126",fe="_saveAvatarButton_7nqzd_138",he="_profileInfo_7nqzd_154",pe="_displayName_7nqzd_170",ge="_username_7nqzd_187",_e="_bio_7nqzd_200",xe="_profileNav_7nqzd_218",ve="_active_7nqzd_256",Ne="_profileContent_7nqzd_271",ye="_tabContent_7nqzd_275",be="_editButton_7nqzd_293",je="_editForm_7nqzd_315",Ce="_formButtons_7nqzd_335",ke="_favoritesList_7nqzd_354",Ie="_loading_7nqzd_396",Se="_error_7nqzd_407",Pe="_imageActionButtons_7nqzd_419",Ee="_cancelUploadButton_7nqzd_427",we="_editImageButton_7nqzd_428",Le="_interestsList_7nqzd_529",Ue="_interestTags_7nqzd_533",qe="_interestTag_7nqzd_533",ze="_interestsGrid_7nqzd_557",Be="_interestCheckbox_7nqzd_564",Ae="_settingsForm_7nqzd_584",Re="_settingSection_7nqzd_589",Fe="_languageSelect_7nqzd_620",Te="_checkboxLabel_7nqzd_642",De="_preferencesNote_7nqzd_655",Oe="_saveButton_7nqzd_672",Je="_communitySection_7nqzd_693",Me="_benefitsList_7nqzd_744",Ge="_discordButton_7nqzd_784",$e="_upgradeButton_7nqzd_784",a={profilePage:se,profileHeader:ne,coverImage:oe,avatarContainer:re,avatar:ie,avatarOverlay:ce,hasImage:le,modal:de,modalContent:me,modalClose:ue,saveAvatarButton:fe,profileInfo:he,displayName:pe,username:ge,bio:_e,profileNav:xe,active:ve,profileContent:Ne,tabContent:ye,editButton:be,editForm:je,formButtons:Ce,favoritesList:ke,loading:Ie,error:Se,imageActionButtons:Pe,cancelUploadButton:Ee,editImageButton:we,interestsList:Le,interestTags:Ue,interestTag:qe,interestsGrid:ze,interestCheckbox:Be,settingsForm:Ae,settingSection:Re,languageSelect:Fe,checkboxLabel:Te,preferencesNote:De,saveButton:Oe,communitySection:Je,benefitsList:Me,discordButton:Ge,upgradeButton:$e},_="profile_data",E="community_data",J=1800*1e3,He=[{code:"en",name:"English"},{code:"es",name:"Spanish"},{code:"fr",name:"French"},{code:"de",name:"German"},{code:"it",name:"Italian"},{code:"pt",name:"Portuguese"},{code:"ru",name:"Russian"},{code:"zh",name:"Chinese"},{code:"ja",name:"Japanese"},{code:"ko",name:"Korean"}],Qe=()=>{const[r,x]=d.useState(null),[v,w]=d.useState(null),[m,M]=d.useState("about"),[R,p]=d.useState(!1),[c,g]=d.useState({displayName:"",firstName:"",lastName:"",username:"",bio:"",interests:[],notifications:{email:!0,inApp:!0},emailPreferences:{weeklyUpdates:!0,newAgents:!0,newTools:!0,announcements:!0,marketingEmails:!0}}),[y,b]=d.useState(null),[S,j]=d.useState(""),[G,C]=d.useState(!0),[F,h]=d.useState(""),[T,N]=d.useState(""),[$,L]=d.useState(!1),{user:l,updateUserProfile:f}=d.useContext(X),U=d.useRef(null),P=t=>{t&&(x(t),g({displayName:t.displayName||"",firstName:t.firstName||"",lastName:t.lastName||"",username:t.username||"",bio:t.bio||"",interests:t.interests||[],notifications:t.notifications||{email:!0,inApp:!0},emailPreferences:t.emailPreferences||{weeklyUpdates:!0,newAgents:!0,newTools:!0,announcements:!0,marketingEmails:!0}}))};d.useEffect(()=>{const t=async()=>{try{if(C(!0),r&&Object.keys(r).length>0){C(!1);return}l&&Object.keys(l).length>0&&(P(l),C(!1));const o=localStorage.getItem(_);if(o)try{const{data:i,timestamp:I}=JSON.parse(o);if(Date.now()-I<J){P(i),C(!1);return}}catch(i){console.error("[Profile] Error parsing cached profile data:",i)}const n=await B();P(n);try{localStorage.setItem(_,JSON.stringify({data:n,timestamp:Date.now()}))}catch(i){console.error("[Profile] Error caching profile data:",i)}}catch(o){console.error("[Profile] Error fetching profile:",o);try{const n=localStorage.getItem(_);if(n){const{data:i}=JSON.parse(n);P(i)}}catch(n){console.error("[Profile] Error reading fallback cache:",n),h(o.message||"Error fetching profile")}}finally{C(!1)}},s=async()=>{try{if(v&&Object.keys(v).length>0)return;const o=localStorage.getItem(E);if(o)try{const{data:i,timestamp:I}=JSON.parse(o);if(Date.now()-I<J){w(i);return}}catch(i){console.error("[Profile] Error parsing cached community data:",i)}const n=await Z();w(n);try{localStorage.setItem(E,JSON.stringify({data:n,timestamp:Date.now()}))}catch(i){console.error("[Profile] Error caching community data:",i)}}catch(o){console.error("[Profile] Error fetching community info:",o);try{const n=localStorage.getItem(E);if(n){const{data:i}=JSON.parse(n);w(i)}}catch(n){console.error("[Profile] Error reading fallback community cache:",n)}}};t(),s()},[l]);const k=t=>{M(t),p(!1)},q=t=>{const{name:s,value:o}=t.target;g(n=>({...n,[s]:o}))},H=t=>{const s=t.target.files[0];if(s){b(s);const o=new FileReader;o.onloadend=()=>j(o.result),o.readAsDataURL(s)}},D=()=>{U.current&&U.current.click()},Y=async()=>{try{if(y){const t=await O(y);x(o=>({...o,photoURL:t.photoURL})),N("Profile image updated successfully!"),b(null),j("");const s=await B();x(s),f&&await f(l.uid,s),localStorage.removeItem(_),u.success("Profile image updated successfully!")}}catch(t){console.error(t),h("Failed to update profile image."),u.error("Failed to update profile image.")}},K=()=>{b(null),j("")},Q=async()=>{try{await A({...r,photoURL:""});const t=await B();x(t),f&&await f(l.uid,t),localStorage.removeItem(_),N("Avatar removed successfully!"),u.success("Avatar removed successfully!")}catch(t){console.error(t),h("Failed to remove avatar."),u.error("Failed to remove avatar.")}},V=t=>{g(s=>{const o=[...s.interests],n=o.indexOf(t);return n===-1?o.push(t):o.splice(n,1),{...s,interests:o}})},z=async t=>{t.preventDefault(),h(""),N("");try{if(m==="interests"){const n=c.interests;if(!Array.isArray(n))throw new Error("Invalid interests format");try{if((await ee(n)).success)localStorage.removeItem(_),localStorage.removeItem(E),x(I=>({...I,interests:n})),f&&l?.uid&&await f(l.uid,{...l,interests:n}),N("Interests updated successfully!"),u.success("Interests updated successfully!"),p(!1);else throw new Error("Failed to update interests")}catch(i){console.error("[Profile] Error updating interests:",i),h(i.message||"Failed to update interests"),u.error(i.message||"Failed to update interests")}return}if(m==="settings")try{await te(c.emailPreferences),localStorage.removeItem(_),x(n=>({...n,emailPreferences:c.emailPreferences})),await A({...r,notifications:c.notifications,language:c.language}),f&&l?.uid&&await f(l.uid,{...l,notifications:c.notifications,emailPreferences:c.emailPreferences,language:c.language}),N("Settings updated successfully!"),u.success("Settings updated successfully!");return}catch(n){console.error("[Profile] Error updating email preferences:",n),h(`Error updating preferences: ${n.message||"Unknown error"}`),u.error(`Error updating preferences: ${n.message||"Unknown error"}`);return}let s=r.photoURL;if(y)try{new FormData().append("avatar",y);const i=await O(y);if(i&&i.photoURL)s=i.photoURL;else throw new Error("Invalid response from image upload")}catch(n){console.error("[Profile] Error uploading image:",n),h(`Error uploading image: ${n.message||"Unknown error"}`),u.error(`Error uploading image: ${n.message||"Unknown error"}`);return}const o={...c,photoURL:s};try{await A({...r,displayName:o.displayName,bio:o.bio,photoURL:s}),localStorage.removeItem(_),x(n=>({...n,displayName:o.displayName,bio:o.bio,photoURL:s})),f&&l?.uid&&await f(l.uid,{...l,displayName:o.displayName,bio:o.bio,photoURL:s}),N("Profile updated successfully!"),u.success("Profile updated successfully!"),p(!1),b(null),j("")}catch(n){console.error("[Profile] Error updating profile:",n),h(`Error updating profile: ${n.message||"Unknown error"}`),u.error(`Error updating profile: ${n.message||"Unknown error"}`)}}catch(s){console.error("[Profile] Error in handleUpdate:",s),h(s.message||"Error updating profile"),u.error(s.message||"Error updating profile"),p(!0)}},W=()=>{r&&(r.photoURL||S)&&L(!0)};return d.useEffect(()=>()=>{},[]),G?e.jsx("div",{className:a.loading,children:"Loading profile..."}):F&&!r?e.jsx("div",{className:a.error,children:F}):e.jsxs("div",{className:a.profilePage,children:[e.jsxs("header",{className:a.profileHeader,children:[e.jsx("div",{className:a.coverImage}),e.jsxs("div",{className:`${a.avatarContainer} ${r?.photoURL?a.hasImage:""}`,children:[e.jsx("img",{className:a.avatar,src:S||r?.photoURL||"/default-avatar.png",alt:"Profile Avatar",onClick:W,onError:t=>{console.error("Image load error:",t),t.target.src="/default-avatar.png",t.target.onerror=null}}),e.jsx("div",{className:a.avatarOverlay,onClick:D,children:e.jsx("span",{className:a.uploadIcon,children:"ðŸ“·"})}),e.jsx("input",{type:"file",accept:"image/*",ref:U,style:{display:"none"},onChange:H})]}),S?e.jsxs("div",{className:a.imageActionButtons,children:[e.jsx("button",{className:a.saveAvatarButton,onClick:Y,children:"Save Profile Image"}),e.jsx("button",{className:a.cancelUploadButton,onClick:K,children:"Cancel Upload"})]}):r?.photoURL&&e.jsxs("div",{className:a.imageActionButtons,children:[e.jsx("button",{className:a.editImageButton,onClick:D,children:"Change Image"}),e.jsx("button",{className:a.cancelUploadButton,onClick:Q,children:"Remove Image"})]}),e.jsxs("div",{className:a.profileInfo,children:[e.jsx("h1",{className:a.displayName,children:r?.displayName}),e.jsxs("p",{className:a.username,children:["@",r?.username]}),e.jsx("p",{className:a.bio,children:r?.bio||"No bio provided."})]})]}),e.jsxs("nav",{className:a.profileNav,children:[e.jsx("button",{className:m==="about"?a.active:"",onClick:()=>k("about"),children:"About"}),e.jsx("button",{className:m==="interests"?a.active:"",onClick:()=>k("interests"),children:"Interests"}),e.jsx("button",{className:m==="favorites"?a.active:"",onClick:()=>k("favorites"),children:"Favorites"}),e.jsx("button",{className:m==="settings"?a.active:"",onClick:()=>k("settings"),children:"Settings"}),e.jsx("button",{className:m==="community"?a.active:"",onClick:()=>k("community"),children:"Community"})]}),e.jsxs("main",{className:a.profileContent,children:[m==="about"&&e.jsx("div",{className:a.tabContent,children:R?e.jsxs("form",{className:a.editForm,onSubmit:z,children:[e.jsx("h2",{children:"Edit Profile"}),e.jsxs("label",{children:["Display Name:",e.jsx("input",{type:"text",name:"displayName",value:c.displayName,onChange:q})]}),e.jsxs("label",{children:["Bio:",e.jsx("textarea",{name:"bio",value:c.bio,onChange:q})]}),e.jsxs("div",{className:a.formButtons,children:[e.jsx("button",{type:"submit",children:"Save"}),e.jsx("button",{type:"button",onClick:()=>{p(!1),b(null),j("")},children:"Cancel"})]})]}):e.jsxs(e.Fragment,{children:[e.jsx("h2",{children:"About Me"}),e.jsxs("p",{children:[e.jsx("strong",{children:"Full Name:"})," ",r.firstName," ",r.lastName]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Email:"})," ",r.email]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Bio:"})," ",r.bio||"No bio provided."]}),e.jsx("button",{className:a.editButton,onClick:()=>p(!0),children:"Edit Profile"})]})}),m==="interests"&&e.jsx("div",{className:a.tabContent,children:R?e.jsxs("form",{className:a.editForm,onSubmit:z,children:[e.jsx("h2",{children:"Select Your Interests"}),e.jsx("div",{className:a.interestsGrid,children:ae.map((t,s)=>e.jsxs("label",{className:a.interestCheckbox,children:[e.jsx("input",{type:"checkbox",checked:c.interests.includes(t),onChange:()=>V(t)}),t]},s))}),e.jsxs("div",{className:a.formButtons,children:[e.jsx("button",{type:"submit",children:"Save"}),e.jsx("button",{type:"button",onClick:()=>p(!1),children:"Cancel"})]})]}):e.jsxs(e.Fragment,{children:[e.jsx("h2",{children:"My Interests"}),e.jsx("div",{className:a.interestsList,children:r.interests&&r.interests.length>0?e.jsx("div",{className:a.interestTags,children:r.interests.map((t,s)=>e.jsx("span",{className:a.interestTag,children:t},s))}):e.jsx("p",{children:"No interests selected yet."})}),e.jsx("button",{className:a.editButton,onClick:()=>p(!0),children:"Edit Interests"})]})}),m==="favorites"&&e.jsxs("div",{className:a.tabContent,children:[e.jsx("h2",{children:"Favorites"}),r.favorites&&r.favorites.length>0?e.jsx("ul",{className:a.favoritesList,children:r.favorites.map((t,s)=>e.jsx("li",{children:t},s))}):e.jsx("p",{children:"No favorites saved."})]}),m==="settings"&&e.jsxs("div",{className:a.tabContent,children:[e.jsx("h2",{children:"Settings"}),e.jsxs("form",{className:a.settingsForm,onSubmit:z,children:[e.jsxs("div",{className:a.settingSection,children:[e.jsx("h3",{children:"Language"}),e.jsx("select",{name:"language",value:c.language||"en",onChange:q,className:a.languageSelect,children:He.map(t=>e.jsx("option",{value:t.code,children:t.name},t.code))})]}),e.jsxs("div",{className:a.settingSection,children:[e.jsx("h3",{children:"Notifications"}),e.jsxs("label",{className:a.checkboxLabel,children:[e.jsx("input",{type:"checkbox",name:"emailNotifications",checked:c.notifications.email,onChange:t=>{g(s=>({...s,notifications:{...s.notifications,email:t.target.checked}}))}}),"Email Notifications"]}),e.jsxs("label",{className:a.checkboxLabel,children:[e.jsx("input",{type:"checkbox",name:"inAppNotifications",checked:c.notifications.inApp,onChange:t=>{g(s=>({...s,notifications:{...s.notifications,inApp:t.target.checked}}))}}),"In-App Notifications"]})]}),e.jsxs("div",{className:a.settingSection,children:[e.jsx("h3",{children:"Email Updates"}),e.jsxs("label",{className:a.checkboxLabel,children:[e.jsx("input",{type:"checkbox",name:"weeklyUpdates",checked:c.emailPreferences?.weeklyUpdates,onChange:t=>{g(s=>({...s,emailPreferences:{...s.emailPreferences,weeklyUpdates:t.target.checked}}))}}),"Receive weekly updates"]}),e.jsxs("label",{className:a.checkboxLabel,children:[e.jsx("input",{type:"checkbox",name:"newAgents",checked:c.emailPreferences?.newAgents,onChange:t=>{g(s=>({...s,emailPreferences:{...s.emailPreferences,newAgents:t.target.checked}}))}}),"Receive notifications about new agents"]}),e.jsxs("label",{className:a.checkboxLabel,children:[e.jsx("input",{type:"checkbox",name:"newTools",checked:c.emailPreferences?.newTools,onChange:t=>{g(s=>({...s,emailPreferences:{...s.emailPreferences,newTools:t.target.checked}}))}}),"Receive notifications about new AI tools"]}),e.jsx("p",{className:a.preferencesNote,children:"These notifications are enabled by default to keep you informed about new features."})]}),e.jsx("button",{type:"submit",className:a.saveButton,children:"Save Settings"})]})]}),m==="community"&&e.jsxs("div",{className:a.tabContent,children:[e.jsx("h2",{children:"Community"}),e.jsxs("div",{className:a.communitySection,children:[e.jsx("h3",{children:"Join Our Discord Community"}),e.jsx("p",{children:"Connect with other AI enthusiasts, share ideas, and get exclusive updates!"}),v?.discordLink&&e.jsx("a",{href:v.discordLink,target:"_blank",rel:"noopener noreferrer",className:a.discordButton,children:"Join Discord"})]}),e.jsxs("div",{className:a.communitySection,children:[e.jsx("h3",{children:"Premium Membership"}),e.jsxs("div",{className:a.benefitsList,children:[e.jsx("h4",{children:"Benefits:"}),e.jsx("ul",{children:v?.communityBenefits?.map((t,s)=>e.jsx("li",{children:t},s))})]}),v?.paymentLink&&e.jsx("a",{href:v.paymentLink,target:"_blank",rel:"noopener noreferrer",className:a.upgradeButton,children:"Upgrade to Premium"})]})]})]}),T&&e.jsx("p",{style:{color:"green"},children:T}),$&&e.jsxs("div",{className:a.modal,onClick:()=>L(!1),children:[e.jsx("button",{className:a.modalClose,onClick:t=>{t.stopPropagation(),L(!1)},children:"Ã—"}),e.jsx("img",{className:a.modalContent,src:S||r.photoURL||"/default-avatar.png",alt:"Enlarged Avatar",onClick:t=>t.stopPropagation()})]})]})};export{Qe as default};
